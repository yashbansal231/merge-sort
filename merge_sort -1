#include<iostream>
using namespace std;
long int ans=0;
void merge(int A[ ] , int start, int mid, int end) {
int p = start ,q = mid+1;
int Arr[end-start+1] , k=0;
for(int i = start ;i <= end ;i++) {
    if(p > mid)      //checks if first part comes to an end or not .
       Arr[ k++ ] = A[ q++] ;
   else if ( q > end)   
       Arr[ k++ ] = A[ p++ ];
   else if( A[ p ] <= A[ q ])     
      Arr[ k++ ] = A[ p++ ];
   else
      {Arr[ k++ ] = A[ q++];
          ans=ans+1+mid-p;
      }
 }
  for (int p=0 ; p< k ;p ++) {
     A[ start++ ] = Arr[ p ] ;                          
  }
}
void merge_sort(int arr[],int start,int end)
{
    if(start<end){
    int mid=(start+end)/2;
    
    merge_sort(arr,start,mid);
    merge_sort(arr,mid+1,end);
    merge(arr,start,mid,end);
    }
}
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        arr[i]=a;
    }
    merge_sort(arr,0,n-1);
    
    cout<<ans;
}
